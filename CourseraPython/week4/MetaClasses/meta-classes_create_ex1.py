# Мета-классы - классы, которые создают другие классы
# Класс type - базовый мета-класс


# Обычно классы создаются с помощью мета-классов
# можем переопределить поведение при создании класса - добавить какой-то аттрибут или сделать что-то другое
class Meta(type):  # чтобы класс был мета-классом, он должен наследоваться от другого мета-класса
    """Класс, который управляет поведение при создании других классов"""

    # метод __new__ управляет поведением при создании объекта, класса
    def __new__(cls, name, parents, attrs):  # принимает название класса, его родителей и аттрибуты
        print("Creating {}".format(name))

        # записываем в какой-то аттрибут класса ( в данном случае "class_id") значение
        if "class_id" not in attrs:
            attrs["class_id"] = name.lower()

        return super().__new__(cls, name, parents, attrs)


class A(metaclass=Meta):  # Creating A
    pass

print("A.class_id: '{}'".format(A.class_id))  # A.class_id: 'a'
