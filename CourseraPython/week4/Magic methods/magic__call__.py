# Магический метод - это метод, определенный внутри класса, который начинается и заканчивается с "__"
# Магический метод __call__ определяет поведение, когда вызывается класс
# используется при вызове экземпляра класса, а не самого класса


class Logger:
    def __init__(self, filename):
        self.filename = filename

    # при определении __call__, меняем поведение объекта класса при его вызове с помощью круглых скобочек
    def __call__(self, func):
        # записываем в файл не вызов функции, а применении объекта в качестве декоратора
        with open(self.filename, "w") as file:
            file.write("Oh Danny boy...")
        return func


# с помощью метода __call__ определяем logger, который будем использовать в качестве декоратора
# декоратором может быть не только функция, но и класс
logger = Logger("log.txt")  # меняем поведение объекта класса при его вызове с помощью круглых скобочек


# определяем пустую функцию, декоратор которой записываем все ее вызовы
# когда вызовем функцию, в файле появится строка
@logger
def completely_useless_function():
    pass


with open('log.txt') as f:
    print(f.read())  # Oh Danny boy...

