# Python позволяет переопределять поведение при доступе к атрибуту. Это механизм, который позволяет незаметно от
# от пользователя определять различные поведения в наших классах
# С помощью дескрипторов реализована вся "магия" при работе с объектами, классами, методами
# Чтобы определить свой собственный дескриптор, нужно определить класс, задать методы __get__, __set__ или __delete__


class Descriptor:
    # определяет поведение при доступе к атрибуту
    def __get__(self, obj, obj_type):
        print("get")

    # определяет поведение при присвоении чего-то атрибуту
    def __set__(self, obj, value):
        print("set")

    # определяет поведение при удалении атрибута
    def __delete__(self, obj):
        print("delete")


class Class:
    # записываем в атрибут этого класса объект типа дескриптор
    # атрибут будет являться дескриптором - у него будет переопределено поведение при доступе к атрибуту, при
    # присваивании значений или при удалении
    attr = Descriptor()


instance = Class()
instance.attr  # "get"
instance.attr = 10  # "set"
del instance.attr  # "delete"