# Передача параметров в функцию:

# в Python каждая переменная является связью имени с объектом в памяти, и именно это имя, именно эта ссылка на объект
# перадается в функцию
def extender(source_list, extend_list):
    source_list.extend(extend_list)


def replacer(source_tuple, replace_with):
    source_tuple = replace_with


# values изменится, тк наша ссылка на объект попала в функцию extender и list является изменяемым объектом
values = [1, 2, 3]
extender(values, [4, 5, 6])
print(values)  # [1, 2, 3, 4, 5, 6]

# если попытаемся изменить неизменяемое значение, то ничего не получится, тк передаем ссылку на объект в памяти, но
# объект является неизменяемым
values = (1, 2, 3)
replacer(values, (2, 3, 4))
print(values)  # (1, 2, 3)


# !!! нужно быть внимательным с изменением глобальных переменных внутри функций - это является плохой практикой,
# не стоит так программировать, тк бывает не очевидно, что изменяется объект - нужно использовать возвращаемое значение
