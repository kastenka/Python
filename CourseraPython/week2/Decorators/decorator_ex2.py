# Использую декораторы, часто бывает необходимо вернуть не ту же самую функцию, а модифицированную, или даже новую
# функцию, совершенно другую


def decorator(func):
    # декоратор внутри определяет какую-то новую функцию
    def new_func():
        pass
    return new_func  # и возвращает новую функцию


@decorator
def decorated():
    print("Hello")


# при применении декоратора, если вызовем decorated, то не вернется hello, тк вернется на самом деле функция new_func,
# и мы будем вызывать уже функцию new_func - тк в decorated уже записалась новая функция new_func
decorated()  # ''
print(decorated.__name__)  # new_func
