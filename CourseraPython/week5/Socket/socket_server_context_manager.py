# Сокеты. Клиент-сервер
"""Сокеты - это кросс-платформенный механизм для обмена данными между отдельными процессами. Эти процессы могут работать
на разных серверах, могут быть написаны на разных языках. Программа на Python, которая использует механизм сокетов,
осуществляет системные вызовы и взаимодействует с ядром ОС.
Для организации сетевого взаимодействия нужен сервер, который изначально создает некое соединение, и начинает слушать
все запросы, которые поступают в него, и программа-клиент, которая присоединяется к серверу и отправляет ему нужные
данные."""


# Создание сокета, сервер, контекстный менеджер
"""
В сетевых программах должны обрабатываться ошибки и одно из требований к сетевым программам является то, что необходимо
правильно и грамотно завершать работу с созданными connect'ами и со всеми открытыми сокетами, тем самым контролируя 
ресурсы процесса, в котором это работает.
В Python существует более удобный механизм для работы с сокетами в виде контекстных менеджеров
"""
import socket


# не заботимся о методах close
with socket.socket() as sock:  # создаем объект типа socket
    sock.bind(("", 10001))
    sock.listen()

    while True:  # в бесконечном цикле получаем новые соединения от клиентов
        conn, addr = sock.accept()
        with conn:  # для полученного объекта опять используем контекстный менеджер
            while True:
                data = conn.recv(1024)
                if not data:
                    break
                print(data.decode("utf8"))

# после того, как контекстный менеджер завершит свою работу, он автоматически вызовет метод close для нужных объектов
