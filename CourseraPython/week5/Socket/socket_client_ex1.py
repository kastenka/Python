# Сокеты. Клиент-сервер
"""Сокеты - это кросс-платформенный механизм для обмена данными между отдельными процессами. Эти процессы могут работать
на разных серверах, могут быть написаны на разных языках. Программа на Python, которая использует механизм сокетов,
осуществляет системные вызовы и взаимодействует с ядром ОС.
Для организации сетевого взаимодействия нужен сервер, который изначально создает некое соединение, и начинает слушать
все запросы, которые поступают в него, и программа-клиент, которая присоединяется к серверу и отправляет ему нужные
данные."""


# Создание сокета, клиент
import socket


"""Для того, чтобы установить соединение с сервером, мы должны создать объект типа socket.socket, по умолчанию создается
потоковый сокет с семейством address family AF_INET"""
sock = socket.socket()

# Вызываем метод connect, которые заблокируется до тех пор, пока сервер со своей стороны не вызовет метод accept
sock.connect(("127.0.0.1", 10001))

"""После того как системный вызов connect отработал, сокет готов к работе и можно вызывать методы send, sendall или recv
для того, чтобы получать данные с сервера. То есть, по сути, мы получили такой же полнодуплексный канал, с которым можно
работать, отправлять и получать данные"""
sock.sendall("ping".encode("utf8"))

# После того, как завершили работу с нашим клиентским сокетом, необходимо вызвать метод close
sock.close()


# более короткая запись

# вызов метода create_connection возвращает нам соединение, готовое для того, чтобы делать отправку или прием данных
sock = socket.create_connection(("127.0.0.1", 10001))  # передаем адресную пару, необязательный timeout
sock.sendall("ping".encode("utf8"))
sock.close()