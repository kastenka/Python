import os
import csv


class CarBase:
    def __init__(self, brand, photo_file_name, carrying):
        self.photo_file_name = photo_file_name
        self.brand = brand
        self.carrying = float(carrying)

    def get_photo_file_ext(self):
        ext = os.path.splitext(self.photo_file_name)[1]
        return ext


class Car(CarBase):
    def __init__(self,  brand, photo_file_name, carrying, passenger_seats_count):
        super().__init__(brand, photo_file_name, carrying)
        self.passenger_seats_count = int(passenger_seats_count)
        self.car_type = "car"


class Truck(CarBase):
    def __init__(self, brand, photo_file_name, carrying, body_whl):
        super().__init__(brand, photo_file_name, carrying)
        self.body_lwh = body_whl
        try:
            if len(body_whl.split("x")) > 3:
                raise ValueError
            else:
                self.body_length = float(body_whl.split("x")[0])
                self.body_width = float(body_whl.split("x")[1])
                self.body_height = float(body_whl.split("x")[2])
        except ValueError:
            self.body_length = 0.0
            self.body_width = 0.0
            self.body_height = 0.0
        self.car_type = "truck"

    def get_body_volume(self):
        try:
            volume = self.body_length * self.body_height * self.body_width
        except Exception:
            return 0
        return volume


class SpecMachine(CarBase):
    def __init__(self, brand, photo_file_name, carrying, extra):
        super().__init__(brand, photo_file_name, carrying)
        self.extra = extra
        self.car_type = "spec_machine"


def check_null_data(data, input_indexes):
    for index in input_indexes:
        if not data[index]:
            return None
    return data


def check_photo_ext(data):
    photo_ext = [".jpg", ".jpeg", ".png", ".gif"]
    for ext in photo_ext:
        if data.endswith(ext) and (len(data) > len(ext)):
            return data
    return None


def get_car_list(csv_filename):
    car_data = []
    with open(csv_filename, "r") as file:
        reader = csv.reader(file, delimiter=";")
        next(reader)

        for raw in reader:
            if raw[0] == "car":
                if check_null_data(raw, [1, 2, 3, 5]) and check_photo_ext(raw[3]):
                    try:
                        car_data.append(Car(brand=raw[1], passenger_seats_count=raw[2],
                                            photo_file_name=raw[3], carrying=raw[5]))
                    except Exception:
                        continue
                else:
                    continue
            if raw[0] == "truck":
                if check_null_data(raw, [1, 3, 5]) and check_photo_ext(raw[3]):
                    try:
                        car_data.append(Truck(brand=raw[1], photo_file_name=raw[3],
                                              body_whl=raw[4], carrying=raw[5]))
                    except Exception:
                        continue
                else:
                    continue
            if raw[0] == "spec_machine":
                if check_null_data(raw, [1, 3, 5, 6]) and check_photo_ext(raw[3]):
                    try:
                        car_data.append(SpecMachine(brand=raw[1], photo_file_name=raw[3],
                                                    carrying=raw[5], extra=raw[6]))
                    except Exception:
                        continue
                else:
                    continue
            else:
                continue
    return car_data


Тестирование созданных классов
"""
car = Car('Bugatti Veyron', 'bugatti.png', '0.312', '2')
print(car.car_type, car.brand, car.photo_file_name, car.carrying, car.passenger_seats_count, sep='\n')

truck = Truck('Nissan', 'nissan.jpeg', '1.5', '3.92x2.09x1.87')
print(truck.car_type, truck.brand, truck.photo_file_name, truck.body_length, truck.body_width,
      truck.body_height, sep='\n')

spec_machine = SpecMachine('Komatsu-D355', 'd355.jpg', '93', 'pipelayer specs')
print(spec_machine.car_type, spec_machine.brand, spec_machine.carrying, spec_machine.photo_file_name,
      spec_machine.extra, sep='\n')

print(spec_machine.get_photo_file_ext())


cars = get_car_list('example.csv')
print(len(cars))

for car in cars:
    print(type(car))
"""
